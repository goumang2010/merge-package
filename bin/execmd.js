'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = execmd;

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function execmd(argv) {
	function completePath(spath) {
		spath = spath || "";
		console.log(spath);
		var state = _fs2.default.lstatSync(spath);
		if (state.isDirectory()) {
			spath = _path2.default.resolve(spath, 'package.json');
		}
		return spath;
	}

	//console.log(argv);
	var targetfile = completePath(argv.t);

	var pkgobj = void 0;
	try {
		var data = _fs2.default.readFileSync(targetfile, 'utf8');
		pkgobj = JSON.parse(data);
		console.log('Reading from target file : ' + targetfile);
		pkgobj.dependencies = pkgobj.dependencies || {};
		pkgobj.devDependencies = pkgobj.devDependencies || {};
	} catch (err) {
		pkgobj = {
			"name": "Generated by merge-package",
			"version": "0.0.1",
			"description": "Generated by merge-package",
			"dependencies": {},
			"devDependencies": {}
		};
	}

	//console.log(JSON.stringify(pkgobj,null,4));
	function getDepObj(depobj, data) {
		Object.keys(data).forEach(function (d) {
			var revstr = data[d];
			if (depobj[d]) {
				//compare rev,reserve the latest one
				var rev0 = depobj[d].substr(1).split('.');
				var rev = revstr.substr(1).split('.');
				for (var i = 0; i < 3; i++) {
					var n0 = Number(rev0[i]);
					var n1 = Number(rev[i]);
					if (n0 !== n1) {
						if (n0 > n1) {
							revstr = depobj[d];
						}
						break;
					}
				}
			}
			depobj[d] = revstr;
		});

		return depobj;
	}

	argv._.forEach(function (x) {
		var spath = x;
		spath = completePath(spath);
		try {
			var _data = _fs2.default.readFileSync(spath, 'utf8');
			console.log('Reading from source file : ' + spath);
			_data = JSON.parse(_data);
			getDepObj(pkgobj.dependencies, _data.dependencies);
			getDepObj(pkgobj.devDependencies, _data.devDependencies);
		} catch (err) {
			console.log(err);
		}
	});
	//console.log(pkgobj.devDependencies)
	try {
		_fs2.default.writeFileSync(targetfile, JSON.stringify(pkgobj, null, 4));
		console.log('Merged to ' + targetfile + '!');
	} catch (err) {
		console.log(err);
	}
	return { targetfile: targetfile, pkgobj: pkgobj };
};